{"version":3,"file":"src_view_game-scene_ts.js","mappings":"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","sources":["webpack://chess/./src/view/game-assets.ts","webpack://chess/./src/view/game-scene.ts"],"sourcesContent":["import * as BABYLON from \"babylonjs\";\r\nimport board from \"../../assets/board.gltf\";\r\nimport king from \"../../assets/pieces/kingv3.gltf\";\r\nimport queen from \"../../assets/pieces/queenv3.gltf\";\r\nimport bishop from \"../../assets/pieces/bishopv3.gltf\";\r\nimport knight from \"../../assets/pieces/knightv3.gltf\";\r\nimport rook from \"../../assets/pieces/rookv3.gltf\";\r\nimport pawn from \"../../assets/pieces/pawnv3.gltf\";\r\nimport { createMeshMaterials } from \"./materials\";\r\nimport { Scene } from \"babylonjs/scene\";\r\nimport { ISceneLoaderAsyncResult } from \"babylonjs/Loading/sceneLoader\";\r\nimport { AbstractMesh } from \"babylonjs/Meshes/abstractMesh\";\r\nimport { AssetContainer } from \"babylonjs\";\r\nimport pawnAnimation from \"../../assets/piece-animations/pawn-animation.gltf\";\r\nimport rookAnimation from \"../../assets/piece-animations/rook-animation.gltf\";\r\nimport bishopAnimation from \"../../assets/piece-animations/bishop-animation.gltf\";\r\nimport knightAnimation from \"../../assets/piece-animations/knight-animation.gltf\";\r\nimport queenAnimation from \"../../assets/piece-animations/queen-animation.gltf\";\r\n\r\nexport const gameAssets = async (scene: Scene) => {\r\n  const materials = createMeshMaterials(scene);\r\n  //Game Scene\r\n  let meshesToLoad = [king, queen, knight, bishop, rook, pawn];\r\n\r\n  const loadedBoardMesh: ISceneLoaderAsyncResult =\r\n    await BABYLON.SceneLoader.ImportMeshAsync(\"\", board, \"\");\r\n\r\n  const loadedMeshes: ISceneLoaderAsyncResult[] = await Promise.all(\r\n    meshesToLoad.map((mesh) =>\r\n      BABYLON.SceneLoader.ImportMeshAsync(\"\", mesh, \"\")\r\n    )\r\n  );\r\n\r\n  const loadedPawnAnimation: ISceneLoaderAsyncResult =\r\n    await BABYLON.SceneLoader.ImportMeshAsync(\"\", pawnAnimation, \"\");\r\n\r\n  loadedPawnAnimation.animationGroups.forEach((animation) => {\r\n    animation.loopAnimation = false;\r\n  });\r\n\r\n  const loadedRookAnimation: ISceneLoaderAsyncResult =\r\n    await BABYLON.SceneLoader.ImportMeshAsync(\"\", rookAnimation, \"\");\r\n\r\n  loadedRookAnimation.animationGroups.forEach((animation) => {\r\n    animation.loopAnimation = false;\r\n  });\r\n\r\n  const loadedBishopAnimation: ISceneLoaderAsyncResult =\r\n    await BABYLON.SceneLoader.ImportMeshAsync(\"\", bishopAnimation, \"\");\r\n\r\n  loadedBishopAnimation.animationGroups.forEach((animation) => {\r\n    animation.loopAnimation = false;\r\n  });\r\n\r\n  const loadedKnightAnimation: ISceneLoaderAsyncResult =\r\n    await BABYLON.SceneLoader.ImportMeshAsync(\"\", knightAnimation, \"\");\r\n\r\n  loadedKnightAnimation.animationGroups.forEach((animation) => {\r\n    animation.loopAnimation = false;\r\n  });\r\n\r\n  const loadedQueenAnimation: ISceneLoaderAsyncResult =\r\n    await BABYLON.SceneLoader.ImportMeshAsync(\"\", queenAnimation, \"\");\r\n\r\n  loadedQueenAnimation.animationGroups.forEach((animation) => {\r\n    animation.loopAnimation = false;\r\n  });\r\n\r\n  const piecesMeshes: ChessPieceMesh[] = [];\r\n  const boardMeshes: AbstractMesh[] = [];\r\n  const animations = {\r\n    Pawn: loadedPawnAnimation,\r\n    Rook: loadedRookAnimation,\r\n    Bishop: loadedBishopAnimation,\r\n    Knight: loadedKnightAnimation,\r\n    Queen: loadedQueenAnimation,\r\n  };\r\n\r\n  const loadMeshSettings = (mesh: any, color: string) => {\r\n    const name: string = mesh.meshes[1].id;\r\n    let finalMesh: ChessPieceMesh = mesh.meshes[1].clone(name, null)!;\r\n    finalMesh.name = name;\r\n    finalMesh.color = color;\r\n    finalMesh.isPickable = true;\r\n    (finalMesh.isVisible = false), (finalMesh.scalingDeterminant = 50);\r\n    finalMesh.position.y = 0.5;\r\n    finalMesh.name === \"Knight\" && finalMesh.color === \"White\"\r\n      ? (finalMesh.rotation = new BABYLON.Vector3(0, Math.PI, 0))\r\n      : null;\r\n    finalMesh.color === \"White\"\r\n      ? (finalMesh.material = materials.white)\r\n      : (finalMesh.material = materials.black);\r\n\r\n    return piecesMeshes.push(finalMesh);\r\n  };\r\n\r\n  //Sort the loaded meshes\r\n  loadedMeshes.forEach((mesh) => {\r\n    loadMeshSettings(mesh, \"White\");\r\n    loadMeshSettings(mesh, \"Black\");\r\n  });\r\n\r\n  loadedBoardMesh.meshes.forEach((mesh, idx) => {\r\n    mesh.isPickable = false;\r\n    if (idx !== 1) {\r\n      mesh.material = materials.board;\r\n    }\r\n    boardMeshes.push(mesh);\r\n  });\r\n\r\n  return { piecesMeshes, boardMeshes, animations };\r\n};\r\n\r\nexport interface CustomScene extends Scene {\r\n  finalMeshes?: {\r\n    piecesMeshes: ChessPieceMesh[];\r\n    boardMeshes: AbstractMesh[];\r\n    animations: Animation;\r\n  };\r\n  meshesToRender?: AbstractMesh[];\r\n  animationsContainer?: Animation;\r\n}\r\n\r\nexport interface ChessPieceMesh extends AbstractMesh {\r\n  name: string;\r\n  color?: string;\r\n}\r\n\r\ntype Animation = {\r\n  Pawn: AssetContainer | ISceneLoaderAsyncResult;\r\n  Bishop: AssetContainer | ISceneLoaderAsyncResult;\r\n  Rook: AssetContainer | ISceneLoaderAsyncResult;\r\n  Knight: AssetContainer | ISceneLoaderAsyncResult;\r\n  Queen: AssetContainer | ISceneLoaderAsyncResult;\r\n};\r\n","import * as BABYLON from \"babylonjs\";\r\nimport space from \"../../assets/space.webp\";\r\nimport { gameAssets } from \"./game-assets\";\r\nimport { createMovementMaterials } from \"./materials\";\r\nimport { CustomScene } from \"./game-assets\";\r\n\r\nexport const gameScene = async (\r\n  canvas: HTMLCanvasElement,\r\n  engine: BABYLON.Engine\r\n): Promise<CustomScene> => {\r\n  const scene: CustomScene = new BABYLON.Scene(engine);\r\n  const camera = new BABYLON.ArcRotateCamera(\r\n    \"camera\",\r\n    Math.PI,\r\n    Math.PI / 4,\r\n    70,\r\n    new BABYLON.Vector3(0, 0, 0),\r\n    scene\r\n  );\r\n  camera.lowerRadiusLimit = 25;\r\n  camera.upperRadiusLimit = 200;\r\n  camera.attachControl(canvas, true);\r\n\r\n  const light = new BABYLON.HemisphericLight(\r\n    \"light\",\r\n    new BABYLON.Vector3(0, 100, 0),\r\n    scene\r\n  );\r\n  light.intensity = 0.8;\r\n\r\n  const light2 = new BABYLON.SpotLight(\r\n    \"spotLight\",\r\n    new BABYLON.Vector3(0, 20, 30),\r\n    new BABYLON.Vector3(0, 0, -30),\r\n    90,\r\n    1,\r\n    scene\r\n  );\r\n  light2.intensity = 0.8;\r\n  light2.diffuse = new BABYLON.Color3(0, 0, 0);\r\n\r\n  const light3 = new BABYLON.SpotLight(\r\n    \"spotLight2\",\r\n    new BABYLON.Vector3(0, 20, -30),\r\n    new BABYLON.Vector3(0, 0, 30),\r\n    90,\r\n    1,\r\n    scene\r\n  );\r\n  light3.intensity = 0.8;\r\n  light3.diffuse = new BABYLON.Color3(0, 0, 0);\r\n\r\n  const photoDome = new BABYLON.PhotoDome(\r\n    \"spaceDome\",\r\n    space,\r\n    { size: 500 },\r\n    scene\r\n  );\r\n  photoDome.rotation = new BABYLON.Vector3(0, 1, 1.5);\r\n\r\n  createMovementMaterials(scene);\r\n  scene.finalMeshes = await gameAssets(scene);\r\n\r\n  //#region Animations\r\n  //Pawn Animations\r\n  const pawnAnimationContainer = new BABYLON.AssetContainer(scene);\r\n\r\n  scene.finalMeshes?.animations?.Pawn.meshes.forEach((mesh) =>\r\n    pawnAnimationContainer!.meshes.push(mesh)\r\n  );\r\n\r\n  scene.finalMeshes?.animations?.Pawn.animationGroups.forEach((anim) =>\r\n    pawnAnimationContainer!.animationGroups.push(anim)\r\n  );\r\n\r\n  // pawnAnimationContainer.meshes.forEach(mesh => mesh.)\r\n  pawnAnimationContainer.removeAllFromScene();\r\n\r\n  // Rook Animations\r\n  const rookAnimationContainer = new BABYLON.AssetContainer(scene);\r\n\r\n  scene.finalMeshes?.animations?.Rook.meshes.forEach((mesh) =>\r\n    rookAnimationContainer!.meshes.push(mesh)\r\n  );\r\n  scene.finalMeshes?.animations?.Rook.animationGroups.forEach((anim) =>\r\n    rookAnimationContainer!.animationGroups.push(anim)\r\n  );\r\n\r\n  rookAnimationContainer.removeAllFromScene();\r\n\r\n  // Bishop Animations\r\n  const bishopAnimationContainer = new BABYLON.AssetContainer(scene);\r\n\r\n  scene.finalMeshes?.animations?.Bishop.meshes.forEach((mesh) =>\r\n    bishopAnimationContainer!.meshes.push(mesh)\r\n  );\r\n  scene.finalMeshes?.animations?.Bishop.animationGroups.forEach((anim) =>\r\n    bishopAnimationContainer!.animationGroups.push(anim)\r\n  );\r\n\r\n  bishopAnimationContainer.removeAllFromScene();\r\n\r\n  // Knight Animations\r\n  const knightAnimationContainer = new BABYLON.AssetContainer(scene);\r\n\r\n  scene.finalMeshes?.animations?.Knight.meshes.forEach((mesh) =>\r\n    knightAnimationContainer!.meshes.push(mesh)\r\n  );\r\n  scene.finalMeshes?.animations?.Knight.animationGroups.forEach((anim) =>\r\n    knightAnimationContainer!.animationGroups.push(anim)\r\n  );\r\n\r\n  knightAnimationContainer.removeAllFromScene();\r\n\r\n  // Queen Animations\r\n  const queenAnimationContainer = new BABYLON.AssetContainer(scene);\r\n\r\n  scene.finalMeshes?.animations?.Queen.meshes.forEach((mesh) =>\r\n    queenAnimationContainer!.meshes.push(mesh)\r\n  );\r\n  scene.finalMeshes?.animations?.Queen.animationGroups.forEach((anim) =>\r\n    queenAnimationContainer!.animationGroups.push(anim)\r\n  );\r\n\r\n  queenAnimationContainer.removeAllFromScene();\r\n\r\n  //#endregion\r\n\r\n  scene.animationsContainer = {\r\n    Pawn: pawnAnimationContainer,\r\n    Bishop: bishopAnimationContainer,\r\n    Rook: rookAnimationContainer,\r\n    Knight: knightAnimationContainer,\r\n    Queen: queenAnimationContainer,\r\n  };\r\n\r\n  scene.finalMeshes?.boardMeshes.forEach((mesh, idx) => {\r\n    if (idx === 2) {\r\n      const material = new BABYLON.StandardMaterial(\"light\", scene);\r\n      material.diffuseColor = new BABYLON.Color3(0.01, 0.01, 0.01);\r\n      material.specularColor = new BABYLON.Color3(0.01, 0.01, 0.01);\r\n      mesh.material = material;\r\n    }\r\n  });\r\n\r\n  return scene;\r\n};\r\n"],"names":[],"sourceRoot":""}